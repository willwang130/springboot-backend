
services:

  # Spring Boot 应用
  app:
    env_file:
      - .env
    build:
      context: .   # 让 Docker 自动构建最新的代码
      dockerfile: docker/Dockerfile  #  指定 Dockerfile
    image: backend-app-image  # Spring Boot 镜像
    container_name: backend-app
    restart: always
    depends_on:
      - mysql
      - redis
      - rabbitmq
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://backend-mysql:3306/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8080:8080"

  # MySQL 服务
  mysql:
    image: mysql:8.0
    container_name: backend-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # Nginx 代理
  nginx:
    image: nginx:latest
    container_name: backend-nginx
    restart: always
    depends_on:
      - app
    ports:
      - "80:80"   # 映射 80 端口
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro  # 绑定 Nginx 配置文件
      - ./html:/usr/share/nginx/html:ro   # 挂载 index.html

  redis:
    image: redis:latest
    container_name: backend-redis
    restart: always
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD} --bind 0.0.0.0  # 让 Redis 允许外部访问 Testing
    volumes:
      - ./docker/redis.conf:/usr/local/etc/redis/redis.conf  # 挂载 redis.conf 配置文件
      - ./data:/data  # 持久化 Redis 数据

    # RabbitMQ 队列
  rabbitmq:
    image: rabbitmq:management  # 启用 RabbitMQ 管理界面
    container_name: backend-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"  # RabbitMQ 端口
      - "15672:15672"  # 启用管理界面（http://localhost:15672）

volumes:
  mysql_data:
